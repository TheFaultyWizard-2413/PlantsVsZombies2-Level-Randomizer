/* PvZ2 Level Shuffler Custom Styles */

:root {
    --primary-green: hsl(134, 61%, 41%);
    --secondary-orange: hsl(24, 100%, 50%);
    --accent-purple: hsl(271, 76%, 53%);
    --bg-dark: hsl(210, 11%, 15%);
    --bg-darker: hsl(210, 11%, 10%);
}

/* Body and layout enhancements */
body {
    background: linear-gradient(135deg, var(--bg-dark) 0%, var(--bg-darker) 100%);
    min-height: 100vh;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

/* Card enhancements */
.card {
    backdrop-filter: blur(10px);
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    transition: all 0.3s ease;
}

.card:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
}

/* Form switch styling */
.form-check-input:checked {
    background-color: var(--primary-green);
    border-color: var(--primary-green);
}

.form-check-input:focus {
    border-color: var(--primary-green);
    outline: 0;
    box-shadow: 0 0 0 0.25rem rgba(34, 139, 34, 0.25);
}

/* Button enhancements */
.btn-primary {
    background: linear-gradient(45deg, var(--primary-green), var(--secondary-orange));
    border: none;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    transition: all 0.3s ease;
}

.btn-primary:hover {
    background: linear-gradient(45deg, var(--secondary-orange), var(--primary-green));
    transform: translateY(-1px);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
}

.btn-primary:disabled {
    background: #6c757d;
    transform: none;
    box-shadow: none;
}

/* Alert styling */
.alert {
    border: none;
    border-radius: 12px;
    backdrop-filter: blur(10px);
}

.alert-info {
    background: rgba(13, 202, 240, 0.1);
    color: #0dcaf0;
    border-left: 4px solid #0dcaf0;
}

.alert-warning {
    background: rgba(255, 193, 7, 0.1);
    color: #ffc107;
    border-left: 4px solid #ffc107;
}

.alert-success {
    background: rgba(25, 135, 84, 0.1);
    color: #198754;
    border-left: 4px solid #198754;
}

.alert-danger {
    background: rgba(220, 53, 69, 0.1);
    color: #dc3545;
    border-left: 4px solid #dc3545;
}

/* Progress modal styling */
.modal-content {
    background: rgba(33, 37, 41, 0.95);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.spinner-border {
    width: 3rem;
    height: 3rem;
    border-width: 0.3em;
}

/* Footer styling */
footer {
    background: var(--bg-darker) !important;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
}

/* Icon animations */
.fa-spin {
    animation: fa-spin 1s infinite linear;
}

@keyframes fa-spin {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(359deg);
    }
}

/* Responsive enhancements */
@media (max-width: 768px) {
    .display-4 {
        font-size: 2rem;
    }
    
    .card-body {
        padding: 1rem;
    }
    
    .btn-lg {
        padding: 0.75rem 1.5rem;
        font-size: 1rem;
    }
}

/* Custom file status indicators */
.file-status {
    position: relative;
    overflow: hidden;
}

.file-status::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, 
        transparent, 
        rgba(255, 255, 255, 0.1), 
        transparent
    );
    transition: left 0.5s ease;
}

.file-status:hover::before {
    left: 100%;
}

/* Custom checkbox styling for toggles */
.toggle-card {
    cursor: pointer;
    transition: all 0.3s ease;
}

.toggle-card:hover {
    background: rgba(255, 255, 255, 0.02);
}

.toggle-card .form-check-input {
    cursor: pointer;
}

/* Loading state for buttons */
.btn-loading {
    position: relative;
    pointer-events: none;
}

.btn-loading::after {
    content: '';
    position: absolute;
    width: 16px;
    height: 16px;
    margin: auto;
    border: 2px solid transparent;
    border-top-color: #ffffff;
    border-radius: 50%;
    animation: button-loading-spinner 1s ease infinite;
}

@keyframes button-loading-spinner {
    from {
        transform: rotate(0turn);
    }
    to {
        transform: rotate(1turn);
    }
}
